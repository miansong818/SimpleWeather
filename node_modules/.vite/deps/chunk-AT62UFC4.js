import {
  getCurrentInstanceName,
  propsFactory
} from "./chunk-O6TSDDP2.js";
import {
  computed,
  isRef
} from "./chunk-HS45CFH5.js";

// node_modules/.pnpm/vuetify@3.6.8_typescript@5.4.5_vite-plugin-vuetify@2.0.3_vue@3.4.27/node_modules/vuetify/lib/composables/rounded.mjs
var makeRoundedProps = propsFactory({
  rounded: {
    type: [Boolean, Number, String],
    default: void 0
  },
  tile: Boolean
}, "rounded");
function useRounded(props) {
  let name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : getCurrentInstanceName();
  const roundedClasses = computed(() => {
    const rounded = isRef(props) ? props.value : props.rounded;
    const tile = isRef(props) ? props.value : props.tile;
    const classes = [];
    if (rounded === true || rounded === "") {
      classes.push(`${name}--rounded`);
    } else if (typeof rounded === "string" || rounded === 0) {
      for (const value of String(rounded).split(" ")) {
        classes.push(`rounded-${value}`);
      }
    } else if (tile || rounded === false) {
      classes.push("rounded-0");
    }
    return classes;
  });
  return {
    roundedClasses
  };
}

export {
  makeRoundedProps,
  useRounded
};
//# sourceMappingURL=chunk-AT62UFC4.js.map
